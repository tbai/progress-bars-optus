{"version":3,"sources":["../src/index.js"],"names":["ProgressBar","id","initialValue","limit","value","el","document","createElement","classList","add","innerHTML","levelEl","querySelector","textEl","onChange","num","parseInt","innerText","convertValue","style","width","newValue","setValue","containerEl","Error","containerSelector","buildElement","appendChild","data","progressBars","fetch","then","response","json","setupBars","setupActionButtons","barsContainerEl","bars","forEach","initialVal","i","bar","render","actionContainerEl","selectEl","Object","keys","barId","optionEl","setAttribute","buttons","btn","addEventListener","target","event","HTMLButtonElement","incValueBy"],"mappings":"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","file":"index.js","sourcesContent":["\nclass ProgressBar {\n\n  constructor (id, initialValue = 0, limit = 100){\n    this.id = id;\n    this.value = initialValue;\n    this.limit = limit;\n  }\n\n  buildElement(){\n    this.el = document.createElement(\"div\");\n    this.el.id = this.id;\n    this.el.classList.add(\"progress-bar\");\n    this.el.innerHTML =`\n      <div class=\"bar\"></div>\n      <div class=\"level\"></div>\n      <div class=\"text\">${this.value} %</div>\n    `;\n\n    this.levelEl = this.el.querySelector(\".level\");\n    this.textEl = this.el.querySelector(\".text\");\n\n    this.onChange();\n  }\n\n  convertValue(num){\n    return parseInt (100*num/this.limit, 10);\n  }\n\n  onChange(){\n    this.textEl.innerText = `${this.convertValue(this.value)} %`;\n    this.levelEl.style.width = `${this.convertValue(this.value)}%`;\n  }\n\n\n  setValue(num){\n    // validate the number type and range\n    if (typeof num === \"number\" && num >= 0 && num <=this.limit){\n      this.value = num;\n      this.onChange();\n    }\n  }\n\n  incValueBy(num){\n    let newValue = this.value + num;\n    if (newValue > this.limit){\n      newValue = this.limit\n    } else if (newValue <0){\n      newValue = 0;\n    }\n    this.setValue(newValue);\n  }\n\n  render (containerEl){\n\n    if (!containerEl)\n      throw new Error(\"Container element not found: \" + containerSelector);\n\n    this.buildElement();\n    containerEl.appendChild(this.el);\n  }\n\n\n}\n\n\n// Build the HTML\n\nlet data = null;\nlet progressBars = [];\n\nfetch('https://pb-api.herokuapp.com/bars')\n.then(function(response) {\n  return response.json().then( json => {\n    data = json;\n    setupBars();\n    setupActionButtons();\n  });\n});\n\n\nfunction setupBars(){\n  // Render progress bars\n  const barsContainerEl = document.querySelector(\".progress-bars-container\");\n\n  data.bars.forEach((initialVal, i) => {\n    let bar = new ProgressBar(`progress${i+1}`, initialVal, data.limit);\n    bar.render(barsContainerEl);\n    progressBars[bar.id] = bar;\n  });\n\n}\n\nfunction setupActionButtons(){\n  // Render action buttons\n  const actionContainerEl = document.querySelector(\".actions\");\n\n  // render select options\n  const selectEl = document.querySelector(\"select\");\n  Object.keys(progressBars).forEach(barId => {\n    let bar = progressBars[barId];\n    let optionEl = document.createElement(\"option\");\n    optionEl.setAttribute(\"value\", bar.id);\n    optionEl.innerText = bar.id;\n    selectEl.appendChild(optionEl);\n  });\n\n  data.buttons.forEach(num => {\n    let btn = document.createElement('button');\n    btn.setAttribute(\"value\", num);\n    btn.innerText = num;\n    actionContainerEl.appendChild(btn);\n  });\n\n  actionContainerEl.addEventListener(\"click\", event => {\n    let target = event.target;\n    if (event.target instanceof HTMLButtonElement){\n      progressBars[selectEl.value].incValueBy(parseInt(target.value, 10));\n    }\n  });\n}\n\n\n\n\n\n\n\n\n"]}